<?php/** * Created by PhpStorm. * User: dingzq * Date: 2018-2-26 * Time: 14:27 */namespace app\admin\controller;use \org\weixin\Wechat;use \think\Db;class Tag extends Admin{    /**     * 当前模块参数     */    protected function _infoModule(){        return array(            'info'  => array(                'name' => '分组管理',                'description' => '分组管理',            ),            'menu' => array(                array(                    'name' => '分组管理',                    'url' => url('index'),                    'icon' => 'list',                ),                array(                    'name' => '批量打标',                    'url' => url('partnertags'),                    'icon' => 'list',                ),            ),            '_info' => array(                array(                    'name' => '添加分组',                    'url' => url('info'),                ),                array(                    'name' => '一键获取微信分组',                    'url' => url('gettag'),                    'function'=>'ajax'                ),                array(                    'name' => '一键同步微信分组',                    'url' => url('tobetag'),                    'function'=>'ajax'                ),            ),        );    }    /**     * 列表     */    public function index(){        $list = Db::name('wx_tag')->order('id desc')->paginate(15);        $this->assign('list',$list);        return $this->fetch();    }    /**     * 详情     */    public function info(){        $webObj=new Wechat(get_weichat_options());        $id = input('id');        if (input('post.')){            if (input('post.id')){//编辑                $data = [                    'tagname'=>input('post.tagname')                ];                Db::name('wx_tag')->where('id',input('post.id'))->update($data);                $res = $webObj->updateTags();            }else{//新增                 $data = [                     'tagname'=>input('post.tagname'),                 ];                 Db::name('wx_tag')->insert($data);                 $res = $webObj->createTags(input('post.tagname'));            }            if($res['tag']){                return ajaxReturn(200,'操作成功',url('index'));            }else{                return ajaxReturn(0,'操作失败');            }        }        if($id){            $info = Db::name('wx_tag')->where('id',$id)->find();            $this->assign('info',$info);        }        return $this->fetch();    }    /**     * 获取微信分组信息     */    public function gettag(){        $webObj=new Wechat(get_weichat_options());        $res = $webObj->getTag();        foreach ($res['tags'] as $k=>$v){            $info = Db::name('wx_tag')->where('tagid',$v['id'])->find();            if($info){                $data = [                    'tagname'=>$v['name'],                    'count'=>$v['count'],                    'status'=>1                ];                Db::name('wx_tag')->where('tagid',$v['id'])->update($data);            }else{                $data=[                    'tagid'=>$v['id'],                    'tagname'=>$v['name'],                    'count'=>$v['count'],                    'status'=>1                ];                Db::name('wx_tag')->insert($data);            }        }        return ajaxReturn(200,'同步成功');    }    /**     * 一键同步微信标签信息     */    public function tobetag(){        $webObj=new Wechat(get_weichat_options());        $info = Db::name('wx_tag')->where('status',0)->field('id,tagname')->select();        if(!$info){return ajaxReturn(0,'同步失败');}        foreach ($info as $v){            $res = $webObj->createTags($v['tagname']);            if($res['tag']){                $data = [                    'tagid'=>$res['tag']['id'],                    'status'=>1                ];                Db::name('wx_tag')->where('id',$v['id'])->update($data);                return ajaxReturn(200,'同步成功');            }else{                return ajaxReturn(0,'同步失败');            }        }    }    /**     * 批量为合伙人和初创人打标     */    public function partnertags(){        $webObj=new Wechat(get_weichat_options());        if(input('post.group') == 'partner'){//为合伙人打标            //获取合伙人openid列表            $tagid = input('post.tagid');            $limit = input('post.limit');            $len = 50;            $list = Db::name('unicom_partner')->limit($limit,$len)->column('openid');            if(empty($list)){                return ajaxReturn(1,'处理完成');            }            $res = $webObj->batchUpdateTagsMembers($tagid,$list);            if($res['errcode']==0){                return ajaxReturn(200,'操作成功');            }else{                return ajaxReturn(0,'操作失败');            }        }        if(input('post.group') == 'staff'){//为初创人打标            $tagid = input('post.tagid');            $limit = input('post.limit');            $len = 50;            $memberlist = Db::name('unicom_member_info')->limit($limit,$len)->where('openid','exp','is not null')->column('openid');            if(empty($memberlist)){                return ajaxReturn(1,'处理完成');            }            $res = $webObj->batchUpdateTagsMembers($tagid,$memberlist);            if($res['errcode']==0){                return ajaxReturn(200,'操作成功');            }else{                return ajaxReturn(0,'操作失败');            }        }        //获取微信标签列表        $tags = Db::name('wx_tag')->where('status',1)->select();        $this->assign('tags',$tags);        return $this->fetch();    }    /**     * 分组准备     */    public function tagkind(){        $id = input('id');        $model = model('XzyTag');        $this->assign('info', $model->getInfo($id));        //找出手机品牌数据        $ptype = Db::name('xzy_mobiletype')->select();        $this->assign('ptype', $ptype);        //$this->assign('groupList',model('AdminGroup')->loadList());        return $this->fetch();            }    /**     * 开始分组     */    public function tagstart(){        $tagid = input('tagid');        //找出tag        $tagdb = Db::name('xzy_tag')->where('tagid',$tagid)->find();        $tag = $tagdb['tag'];        $redis = new \Redis;        $redis->pconnect('127.0.0.1',6379);        $redis->select(11);        $redis->del('taguser');        //获取所有参数，加上判断，然后放入ajax中的url中。        //这里就直接把选择的用户存入redis，这样会省略一步参数的判断        $tagkind = input('tagkind');        if($tagkind=='phonetype'){            //找到            $ptype = input('ptype');            $udata = Db::name('xzy_wxuser')->field('openid')->where('phonetype',$ptype)->select();            foreach ($udata as $key => $value) {                $redis->lPush('taguser',$value['openid']);            }        }elseif($tagkind=='buymoney'){            //SELECT b.amount,b.memberid,m.memberCode FROM `rn_xzy_bd` b left join rn_xzy_member m on b.memberid=m.memberid where b.amount>1000 and b.amount<2000            $sm = input('sm');            $em = input('em');            $udata = Db::name('xzy_bd')->alias('b')->field('b.amount,b.memberid,m.memberCode')->leftJoin('rn_xzy_member m','b.memberid=m.memberid')->where('b.amount','>=',$sm)->where('b.amount','<',$em)->select();            foreach ($udata as $key => $value) {                $redis->select(2);                $openid = $redis->get($value['memberCode']);                if($openid){                    $redis->select(11);                    $redis->lPush('taguser',$openid);                }                //$redis->lPush('taguser',$value['openid']);            }        }elseif($tagkind=='regdate'){            //找到            $sd = input('sd');            $ed = input('ed');            //月的秒            $monthsec = 60*60*24*30;            $time = time();            $sd_time = $time - $sd*$monthsec;            $ed_time = $time - $ed*$monthsec;            $udata = Db::name('xzy_wxuser')->field('openid')->where('posttime','>=',$ed_time)->where('posttime','<',$sd_time)->select();            foreach ($udata as $key => $value) {                $redis->lPush('taguser',$value['openid']);            }        }        $this->assign('tag', $tag);        $this->assign('tagid', $tagid);        //$this->assign('groupList',model('AdminGroup')->loadList());        return $this->fetch();            }    public function tagtouser(){        $tagid = input('tagid');        $result = array();        $redis = new \Redis;        $redis->pconnect('127.0.0.1',6379);        $redis->select(11);        $length = $redis->lsize('taguser');        if($length>0)        {            $result['errcode']=$length;            $result['errMsg']='success';            $tmpArr = array();            for($i=0;$i<50;$i++){                $openid = $redis->lPop('taguser');                if($openid) {                    $tmpArr[]=$openid;                }            }            $weObj=new Wechat(get_weichat_options());            $weObj->batchUpdateTagsMembers($tagid,$tmpArr);        }else {            $result['errcode']=0;            $result['errMsg']="end";        }        echo json_encode($result);    }    /**     * 删除     */    public function del(){        $webObj=new Wechat(get_weichat_options());        $id = input('id');        $tagid = input('tagid');                if(empty($id)){            return ajaxReturn(0,'参数不能为空');        }        $webObj->deleteTags($tagid);        if(model('XzyTag')->del($id)){            return ajaxReturn(200,'删除成功！');        }else{            return ajaxReturn(0,'删除失败');        }    }}